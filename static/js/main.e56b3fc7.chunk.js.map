{"version":3,"sources":["gifs/preloader.gif","utils/setAuthToken.js","actions/errorActions.js","actions/types.js","actions/authAction.js","components/Header.js","actions/loadingActions.js","components/AuthForm.js","components/Error.js","components/Login.js","components/SignUp.js","components/LandingPage.js","actions/todosActions.js","components/Todo.js","components/TodoForm.js","components/AddTodo.js","components/FilterSort.js","actions/filterAction.js","components/Dashboard.js","selectors/getSelectedTodos.js","router/PrivateRoute.js","router/PublicRoute.js","components/NotFound.js","router/AppRouter.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/todosReducer.js","reducers/loadingReducer.js","reducers/filterReducer.js","reducers/errorReducer.js","store/configureStore.js","index.js"],"names":["module","exports","__webpack_require__","p","setAuthToken","token","axios","defaults","headers","common","setError","error_text","type","setCurrentUser","uid","removeCurrentUser","connect","state","isAuthenticated","auth","dispatch","logoutUser","delete","then","res","localStorage","removeItem","catch","e","message","alert","props","publicLinks","react_default","a","createElement","className","Link","to","privateLinks","onClick","AuthForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleEmailChange","bind","assertThisInitialized","handlePasswordChange","onFormSubmit","email","password","errors","target","value","setState","preventDefault","trim","isEmail","length","onSubmit","_this2","placeholder","classnames","is-invalid","onChange","onKeyUp","React","Component","error","hasErrors","loginUser","userData","arguments","undefined","post","setItem","data","_id","setTimeout","components_Error","components_AuthForm","registerUser","console","log","LandingPage","deleteTodo","addTodo","todo","setTodos","todos","startDeleteTodo","concat","id","text","TodoForm","handleTextChange","startAddTodo","components_TodoForm","setTextFilter","sortByASC","sortByDSC","Dashboard","loadingJSX","src","preLoader","startSetTodos","isLoading","components_FilterSort","map","components_Todo","key","components_AddTodo","filters","filter","toLowerCase","includes","sort","b","sortBy","localeCompare","get","_ref","component","rest","objectWithoutProperties","Route","assign","Redirect","NotFound","AppRouter","BrowserRouter","basename","process","components_Header","Switch","router_PublicRoute","exact","path","router_PrivateRoute","Login","SignUp","App","router_AppRouter","Boolean","window","location","hostname","match","authReducerDefaultState","authReducer","action","objectSpread","todosReducerDefaultState","todosReducer","toConsumableArray","loadingReducer","filterReducerDefaultState","filterReducer","errorReducerDefaultState","errorReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","createStore","combineReducers","applyMiddleware","thunk","store","jsx","es","src_App_0","renderApp","ReactDOM","render","document","getElementById","getItem","decoded","jwt_decode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+SCE3BC,EAAe,SAACC,GACrBA,EACAC,IAAMC,SAASC,QAAQC,OAAO,UAAYJ,SAEnCC,IAAMC,SAASC,QAAQC,OAAO,WCJhCC,EAAW,SAACC,GACrB,MAAO,CACHC,KCSiB,YDRjBD,eE8DKE,EAAiB,SAACC,GAC3B,MAAO,CACHF,KDrEwB,mBCsExBE,QAIKC,EAAoB,WAC7B,MAAO,CACHH,KD3E2B,wBEgEpBI,cAZS,SAACC,GACrB,MAAO,CACHC,kBAAmBD,EAAME,KAAKL,MAIX,SAACM,GACxB,MAAO,CACHC,WAAY,kBAAMD,EDTM,SAAAA,GAC5BA,EElDO,CACHR,KHIwB,qBC8C5BN,IAAMgB,OAAO,wDACRC,KAAK,SAACC,GACHC,aAAaC,WAAW,aACxBtB,GAAa,GACbgB,EAASL,KACTK,EElDD,CACHR,KHDyB,wBCmDtBe,MAAM,SAACC,GACY,kBAAdA,EAAEC,SACFC,MAAM,iCCGPd,CA5DA,SAACe,GACZ,IAAMC,EACFC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,GAAG,SACHF,UAAU,YAFd,UAOJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,GAAG,UACHF,UAAU,YAFd,aASNG,EACFN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,GAAG,IACHF,UAAU,WACVI,QAAS,WACLT,EAAMV,eAJd,YAYZ,OACIY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,gBAAvB,QAEIL,EAAMb,gBAAkBqB,EAAeP,+CEoE5CS,cA7GX,SAAAA,EAAYV,GAAO,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMd,KACDkB,kBAAoBP,EAAKO,kBAAkBC,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACzBA,EAAKU,qBAAuBV,EAAKU,qBAAqBF,KAA1BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAC5BA,EAAKW,aAAeX,EAAKW,aAAaH,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAKzB,MAAQ,CACTqC,MAAO,GACPC,SAAU,GACVC,OAAQ,IARGd,iFAYDd,GACd,IAAM0B,EAAQ1B,EAAE6B,OAAOC,MACvBb,KAAKc,SAAS,iBAAO,CACjBL,wDAIa1B,GACjB,IAAM2B,EAAW3B,EAAE6B,OAAOC,MAC1Bb,KAAKc,SAAS,iBAAO,CACjBJ,mDAIK3B,GACTA,EAAEgC,iBAEGf,KAAK5B,MAAMqC,MAAMO,OAKVC,IAAQjB,KAAK5B,MAAMqC,OAM1BT,KAAK5B,MAAMsC,SAASM,OAKdhB,KAAK5B,MAAMsC,SAASQ,OAAS,EACpClB,KAAKc,SAAS,iBAAO,CACjBH,OAAQ,CAAED,SAAU,kDAK5BV,KAAKd,MAAMiC,SAAS,CAChBV,MAAOT,KAAK5B,MAAMqC,MAClBC,SAAUV,KAAK5B,MAAMsC,WAbrBV,KAAKc,SAAS,iBAAO,CACjBH,OAAQ,CAAED,SAAU,4BAPxBV,KAAKc,SAAS,iBAAO,CACjBH,OAAQ,CAACF,MAAO,+BANpBT,KAAKc,SAAS,iBAAO,CACjBH,OAAQ,CAAEF,MAAO,0DA2BpB,IAAAW,EAAApB,KACL,OACIZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAM6B,SAAUnB,KAAKQ,cACjBpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACIvB,KAAK,OACLsD,YAAY,QACZ9B,UAAW+B,IAAW,eAAgB,CAClCC,aAAcvB,KAAK5B,MAAMuC,OAAOF,QAEpCI,MAAOb,KAAK5B,MAAMqC,MAClBe,SAAUxB,KAAKI,kBACfqB,QAAS,SAAC1C,GACN,IAAM0B,EAAQ1B,EAAE6B,OAAOC,MAClBI,IAAQR,GAKTW,EAAKN,SAAS,iBAAO,CACjBH,OAAQ,MALZS,EAAKN,SAAS,iBAAO,CACjBH,OAAQ,CAACF,MAAO,kCAShCrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeS,KAAK5B,MAAMuC,OAAOF,SAG1DrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACIvB,KAAK,OACLsD,YAAY,WACZ9B,UAAW+B,IAAW,eAAgB,CAClCC,aAAcvB,KAAK5B,MAAMuC,OAAOD,WAEpCG,MAAOb,KAAK5B,MAAMsC,SAClBc,SAAUxB,KAAKO,uBAEnBnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeS,KAAK5B,MAAMuC,OAAOD,YAG1DtB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,mBAvGGmC,IAAMC,WCadxD,cANS,SAACC,GACrB,MAAO,CACHwD,MAAOxD,EAAMwD,QAINzD,CAdD,SAACe,GACX,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACVL,EAAM0C,MAAM9D,cC6BVK,cANS,SAACC,GACrB,MAAO,CACHyD,YAAazD,EAAMwD,MAAM9D,aARN,SAACS,GACxB,MAAO,CACHuD,UAAW,SAACC,GAAD,OAAcxD,ELhBR,eAACwD,EAADC,UAAAd,OAAA,QAAAe,IAAAD,UAAA,GAAAA,UAAA,GAAY,GAAZ,OAAmB,SAAAzD,GACxCd,IAAMyE,KAAK,oDAAqDH,GAC3DrD,KAAK,SAACC,GACHJ,EFFD,CACHR,KCGoB,iBCDhB,IAAMP,EAAQmB,EAAIhB,QAAQ,UAC1BiB,aAAauD,QAAQ,YAAa3E,GAClCD,EAAaC,GACbe,EAASP,EAAeW,EAAIyD,KAAKC,QAClCvD,MAAM,SAACC,GACN,IAAMC,EAAUD,EAAEC,QACF,wCAAZA,GACAT,EAASV,EAAS,gCAClByE,WAAW,WACP/D,EFZT,CACHR,KCGoB,kBCST,MACgB,kBAAZiB,GACPC,MAAM,6BKAoB6C,CAAUC,OAUrC5D,CA5BD,SAACe,GACX,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVL,EAAM2C,WAAazC,EAAAC,EAAAC,cAACiD,EAAD,MACpBnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,SACAH,EAAAC,EAAAC,cAACkD,EAAD,CACIrB,SAAU,SAACY,GACP7C,EAAM4C,UAAUC,UCoBzB5D,cANS,SAACC,GACrB,MAAO,CACHyD,YAAazD,EAAMwD,MAAM9D,aARN,SAACS,GACxB,MAAO,CACHkE,aAAc,SAACV,GAAD,OAAcxD,ENKR,SAACwD,GAAD,OAAc,SAAAxD,GACtCd,IAAMyE,KAAK,8CAA+CH,GACrDrD,KAAK,SAACC,GACH,IAAMnB,EAAQmB,EAAIhB,QAAQ,UAC1BiB,aAAauD,QAAQ,YAAa3E,GAClCD,EAAaC,GACbe,EAASP,EAAeW,EAAIyD,KAAKC,QAEpCvD,MAAM,SAACC,GACJ,IAAMC,EAAUD,EAAEC,QAClB0D,QAAQC,IAAI3D,GACI,wCAAZA,GACAT,EAASV,EAAS,+CAClByE,WAAW,WACP/D,EFlCT,CACHR,KCGoB,kBC+BT,MACgB,kBAAZiB,GACPC,MAAM,6BMtBuBwD,CAAaV,OAU3C5D,CA5BA,SAACe,GACZ,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVL,EAAM2C,WAAazC,EAAAC,EAAAC,cAACiD,EAAD,MACpBnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,WACAH,EAAAC,EAAAC,cAACkD,EAAD,CACIrB,SAAU,SAACY,GACP7C,EAAMuD,aAAaV,UCC5Ba,EAbK,WAChB,OACIxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2EACXH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,SAASF,UAAU,wBAA5B,SACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,UAAUF,UAAU,uBAA7B,cCyCHsD,EAAa,SAACR,GACvB,MAAO,CACHtE,KT9CmB,cS+CnBsE,QAIKS,EAAU,SAACC,GACpB,MAAO,CACHhF,KTtDgB,WSuDhBgF,SAIKC,EAAW,WACpB,MAAO,CACHjF,KT9DiB,YS+DjBkF,MAHgCjB,UAAAd,OAAA,QAAAe,IAAAD,UAAA,GAAAA,UAAA,GAAP,sBCzClB7D,mBAAQ8D,EANI,SAAC1D,GACxB,MAAO,CACH2E,gBAAiB,SAACb,GAAD,OAAS9D,EDiBH,SAAC8D,GAAD,OAAS,SAAA9D,GACpCA,ENnCO,CACHR,KHIwB,qBS+B5BN,IAAMgB,OAAN,+CAAA0E,OAA4Dd,GAAO,CAC3De,GAAIf,IAEP3D,KAAK,SAACC,GACHJ,EAASsE,EAAWlE,EAAIyD,KAAKW,KAAKV,MAClC9D,ENnCD,CACHR,KHDyB,wBSqCxBe,MAAM,SAACC,GACJ2D,QAAQC,IAAI5D,MC3BmBmE,CAAgBb,OAI5ClE,CAnBF,SAACe,GACV,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACXH,EAAAC,EAAAC,cAAA,WAAMJ,EAAM6D,KAAKM,MACjBjE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBI,QAAS,WACnCT,EAAMgE,gBAAgBhE,EAAM6D,KAAKV,OADrC,SCsDDiB,cA5DX,SAAAA,EAAYpE,GAAO,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,IACfzD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwD,GAAAnD,KAAAH,KAAMd,KACDqE,iBAAmB1D,EAAK0D,iBAAiBlD,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACxBA,EAAKsB,SAAWtB,EAAKsB,SAASd,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAChBA,EAAKzB,MAAQ,CACTiF,KAAM,GACN1C,OAAQ,IANGd,gFAUFd,GACb,IAAIsE,EAAOtE,EAAE6B,OAAOC,MACpBb,KAAKc,SAAS,iBAAO,CACjBuC,2CAICtE,GACLA,EAAEgC,iBACGf,KAAK5B,MAAMiF,KAAKrC,QAMrBhB,KAAKc,SAAS,iBAAO,CACjBuC,KAAM,MAEVrD,KAAKd,MAAMsB,aAAa,CACpB6C,KAAMrD,KAAK5B,MAAMiF,QATjBrD,KAAKc,SAAS,iBAAO,CACjBH,OAAQ,CAAC0C,KAAM,yDAavB,OACIjE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAM6B,SAAUnB,KAAKmB,UACjB/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SACIvB,KAAK,OACLsD,YAAY,kBACZR,MAAOb,KAAK5B,MAAMiF,KAClB7B,SAAUxB,KAAKuD,iBACfhE,UAAW+B,IAAW,eAAgB,CAClCC,aAAcvB,KAAK5B,MAAMuC,OAAO0C,SAGxCjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACVS,KAAK5B,MAAMuC,OAAO0C,OAG3BjE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,gBApDGmC,IAAMC,WCqBdxD,mBAAQ8D,EANI,SAAC1D,GACxB,MAAO,CACHiF,aAAc,SAACH,GAAD,OAAU9E,EHIJ,SAAC8E,GAAD,OAAU,SAAA9E,GAClCA,ENtBO,CACHR,KHIwB,qBSkB5BN,IAAMyE,KAAK,8CAA+C,CAClDmB,SAEH3E,KAAK,SAACC,GACHJ,EAASuE,EAAQnE,EAAIyD,OACrB7D,ENtBD,CACHR,KHDyB,wBSuBtBe,MAAM,SAACC,GACN2D,QAAQC,IAAI5D,MGbiByE,CAAaH,OAIvClF,CAlBC,SAACe,GACb,OACIE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmE,EAAD,CACIjD,aAAc,SAACuC,GACX7D,EAAMsE,aAAaT,EAAKM,YCgC7BlF,mBAAQ8D,EARI,SAAC1D,GACxB,MAAO,CACHmF,cAAe,SAACL,GAAD,OAAU9E,EC/BJ,SAAC8E,GAC1B,MAAO,CACHtF,KdIuB,kBcHvBsF,QD4BkCK,CAAcL,KAChDM,UAAW,kBAAMpF,ECxBd,CACHR,KdLmB,iBa6BnB6F,UAAW,kBAAMrF,ECnBd,CACHR,KdVmB,mBagCZI,CAtCI,SAACe,GAChB,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,SACIvB,KAAK,OACLsD,YAAY,kBACZG,SAAU,SAACzC,GACP,IAAIsE,EAAOtE,EAAE6B,OAAOC,MACpB3B,EAAMwE,cAAcL,EAAKrC,SAE7BzB,UAAU,kBAGlBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeiC,SAAU,SAACzC,GACjB,QAAnBA,EAAE6B,OAAOC,MACT3B,EAAMyE,YACoB,QAAnB5E,EAAE6B,OAAOC,OAChB3B,EAAM0E,cAGVxE,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,OAAd,OACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,OAAd,YElBdgD,cACF,SAAAA,EAAY3E,GAAO,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,IACfhE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+D,GAAA1D,KAAAH,KAAMd,KAED4E,WACD1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKyE,IAAKC,OALHnE,mFAWfG,KAAKd,MAAM+E,iDAIX,OACIjE,KAAKd,MAAMgF,UAAYlE,KAAK8D,WAAa1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACxDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAC6E,EAAD,OAEJ/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVS,KAAKd,MAAM+D,MAAM/B,OAAS,EACvBlB,KAAKd,MAAM+D,MAAMmB,IAAI,SAACrB,GAClB,OAAO3D,EAAAC,EAAAC,cAAC+E,EAAD,CACHtB,KAAMA,EACNuB,IAAKvB,EAAKV,QAGhBjD,EAAAC,EAAAC,cAAA,8BAIdF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACiF,EAAD,eApCQ7C,IAAMC,WAwDfxD,cAbS,SAACC,GACrB,MAAO,CACH6E,OCvDyBA,EDuDD7E,EAAM6E,MCvDEuB,EDuDKpG,EAAMoG,QCtDxCvB,EAAMwB,OAAO,SAAC1B,GACjB,OAAOA,EAAKM,KAAKqB,cAAcC,SAASH,EAAQnB,KAAKqB,iBACtDE,KAAK,SAACvF,EAAGwF,GACR,MAAuB,QAAnBL,EAAQM,OACDzF,EAAEgE,KAAKqB,cAAcK,cAAcF,EAAExB,KAAKqB,eACvB,QAAnBF,EAAQM,OACRD,EAAExB,KAAKqB,cAAcK,cAAc1F,EAAEgE,KAAKqB,oBAD9C,KDkDPR,UAAW9F,EAAM8F,WCxDO,IAACjB,EAAOuB,GD4Db,SAACjG,GACxB,MAAO,CACH0F,cAAe,kBAAM1F,ENjDM,SAAAA,GAC/BA,ENXO,CACHR,KHIwB,qBSO5BN,IAAMuH,IAAI,+CACLtG,KAAK,SAACC,GACHJ,EAASyE,EAASrE,EAAIyD,KAAKa,QAC3B1E,ENTD,CACHR,KHDyB,wBSUtBe,MAAM,SAACC,GACN2D,QAAQC,IAAI,UAAW5D,UM8CpBZ,CAA6C0F,mBEjC7C1F,cANS,SAACC,GACrB,MAAO,CACHC,kBAAmBD,EAAME,KAAKL,MAIvBE,CA7BM,SAAA8G,GAIf,IAHF5G,EAGE4G,EAHF5G,gBACWsD,EAETsD,EAFFC,UACGC,EACDrF,OAAAsF,EAAA,EAAAtF,CAAAmF,EAAA,iCACF,OACI7F,EAAAC,EAAAC,cAAC+F,EAAA,EAADvF,OAAAwF,OAAA,GACQH,EADR,CAEID,UAAW,SAAChG,GACR,OACIb,EACIe,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqC,EAAczC,IAGnBE,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAU9F,GAAG,YCYtBtB,cANS,SAACC,GACrB,MAAO,CACHC,kBAAmBD,EAAME,KAAKL,MAIvBE,CA3BK,SAAA8G,GAId,IAHF5G,EAGE4G,EAHF5G,gBACWsD,EAETsD,EAFFC,UACGC,EACDrF,OAAAsF,EAAA,EAAAtF,CAAAmF,EAAA,iCACF,OACI7F,EAAAC,EAAAC,cAAC+F,EAAA,EAADvF,OAAAwF,OAAA,GACQH,EADR,CAEID,UAAW,SAAChG,GACR,OACIb,EACIe,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAU9F,GAAG,eAEbL,EAAAC,EAAAC,cAACqC,EAAczC,SCJxBsG,EAVE,WACb,OACIpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,6BAAoBF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,eCqCrBgG,EAjCG,WACd,OACIrG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACIC,SAAUC,wBAEVxG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuG,EAAD,MACAzG,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACI1G,EAAAC,EAAAC,cAACyG,EAAD,CACIC,OAAK,EAACC,KAAK,IACXf,UAAWtC,IAEfxD,EAAAC,EAAAC,cAAC4G,EAAD,CACIF,OAAK,EAACC,KAAK,aACXf,UAAWrB,IAEfzE,EAAAC,EAAAC,cAACyG,EAAD,CACIC,OAAK,EAACC,KAAK,SACXf,UAAWiB,IAEf/G,EAAAC,EAAAC,cAACyG,EAAD,CACIC,OAAK,EAACC,KAAK,UACXf,UAAWkB,IAEfhH,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,CACIH,UAAWM,QCtBpBa,mLARX,OACEjH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgH,EAAD,cAJU3E,aCME4E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,8FCdAC,GAA0B,GAgBjBC,GAdK,WAA6C,IAA5CzI,EAA4C4D,UAAAd,OAAA,QAAAe,IAAAD,UAAA,GAAAA,UAAA,GAApC4E,GAAyBE,EAAW9E,UAAAd,OAAA,EAAAc,UAAA,QAAAC,EAC7D,OAAO6E,EAAO/I,MACV,IvBNwB,mBuBOpB,OAAO+B,OAAAiH,GAAA,EAAAjH,CAAA,GACA1B,EADP,CAEIH,IAAK6I,EAAO7I,MAEpB,IvBV2B,sBuBWvB,MAAO,GACX,QACI,OAAOG,aCZb4I,GAA2B,GAoBlBC,GAlBM,WAA8C,IAA7C7I,EAA6C4D,UAAAd,OAAA,QAAAe,IAAAD,UAAA,GAAAA,UAAA,GAArCgF,GAA0BF,EAAW9E,UAAAd,OAAA,EAAAc,UAAA,QAAAC,EAC/D,OAAO6E,EAAO/I,MACV,IxBDiB,YwBEb,OAAO+I,EAAO7D,MAClB,IxBFgB,WwBGZ,OAAOnD,OAAAoH,GAAA,EAAApH,CACA1B,GADP+E,OAAA,CAEI2D,EAAO/D,OAEf,IxBNmB,cwBOf,OAAO3E,EAAMqG,OAAO,SAAC1B,GACjB,OAAOA,EAAKV,MAAQyE,EAAOzE,MAEnC,QACI,OAAOjE,ICHJ+I,GAXQ,WAAgD,IAA/C/I,EAA+C4D,UAAAd,OAAA,QAAAe,IAAAD,UAAA,GAAAA,UAAA,GAFpC,KAG/B,QADmEA,UAAAd,OAAA,EAAAc,UAAA,QAAAC,GACrDlE,MACV,IzBEwB,mByBDpB,OAAO,EACX,IzBCyB,oByBArB,OAAO,EACX,QACI,OAAOK,ICLbgJ,GAA4B,CAC9B/D,KAAM,GACNyB,OAAQ,OAyBGuC,GAtBO,WAA+C,IAA9CjJ,EAA8C4D,UAAAd,OAAA,QAAAe,IAAAD,UAAA,GAAAA,UAAA,GAAtCoF,GAA2BN,EAAW9E,UAAAd,OAAA,EAAAc,UAAA,QAAAC,EACjE,OAAO6E,EAAO/I,MACV,I1BDuB,kB0BEnB,OAAO+B,OAAAiH,GAAA,EAAAjH,CAAA,GACA1B,EADP,CAEIiF,KAAMyD,EAAOzD,OAErB,I1BRmB,c0BSf,OAAOvD,OAAAiH,GAAA,EAAAjH,CAAA,GACA1B,EADP,CAEI0G,OAAQ,QAEhB,I1BZmB,c0Baf,OAAOhF,OAAAiH,GAAA,EAAAjH,CAAA,GACA1B,EADP,CAEI0G,OAAQ,QAEhB,QACI,OAAO1G,IC3BbkJ,GAA2B,GAgBlBC,GAdM,WAA8C,IAA7CnJ,EAA6C4D,UAAAd,OAAA,QAAAe,IAAAD,UAAA,GAAAA,UAAA,GAArCsF,GAA0BR,EAAW9E,UAAAd,OAAA,EAAAc,UAAA,QAAAC,EAC/D,OAAO6E,EAAO/I,MACV,I3BOiB,Y2BNb,OAAO+B,OAAAiH,GAAA,EAAAjH,CAAA,GACA1B,EADP,CAEIN,WAAYgJ,EAAOhJ,aAE3B,I3BGoB,e2BFhB,MAAO,GACX,QACI,OAAOM,ICNboJ,GAAmBhB,OAAOiB,sCAAwCC,IAgBzDC,GAfQ,WAYnB,OAXcC,YAAYC,YAAgB,CACtCvJ,KAAMuI,GACN5D,MAAOgE,GACP/C,UAAWiD,GACX3C,QAAS6C,GACTzF,MAAO2F,KACPC,GACAM,YAAgBC,4BCLlBC,GAAQL,KAEVM,GACA7I,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CACIF,MAAOA,IAEP5I,EAAAC,EAAAC,cAAC6I,EAAD,OAIFC,GAAY,WACd,OAAOC,IAASC,OAAOL,GAAKM,SAASC,eAAe,UAGxD,GAAI5J,aAAa6J,QAAQ,aAAc,CACnClL,EAAaqB,aAAa6J,QAAQ,cAClC,IAAMC,GAAUC,KAAW/J,aAAa6J,QAAQ,cAChD/F,QAAQC,IAAI+F,IACZV,GAAMzJ,SAASP,EAAe0K,GAAQrG,MACtC+F,UAEAJ,GAAMzJ,SAASL,KACfkK,KPuFE,kBAAmBQ,WACrBA,UAAUC,cAAcC,MAAMpK,KAAK,SAAAqK,GACjCA,EAAaC","file":"static/js/main.e56b3fc7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.7e2490c6.gif\";","import axios from 'axios';\r\n\r\nexport const setAuthToken = (token) => {\r\n    if (token) {\r\n        axios.defaults.headers.common['x-auth'] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth'];\r\n    }\r\n};","import { SET_ERROR, SET_NO_ERROR } from './types';\r\n\r\nexport const setError = (error_text) => {\r\n    return {\r\n        type: SET_ERROR,\r\n        error_text\r\n    };\r\n};\r\n\r\nexport const setNoError = () => {\r\n    return {\r\n        type: SET_NO_ERROR\r\n    };\r\n};","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const REMOVE_CURRENT_USER = 'REMOVE_CURRENT_USER';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const SET_TODOS = 'SET_TODOS';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const REMOVE_TODO = 'REMOVE_TODO';\r\nexport const SET_LOADING_TRUE = 'SET_LOADING_TRUE';\r\nexport const SET_LOADING_FALSE = 'SET_LOADING_FALSE';\r\nexport const SORT_BY_ASC = 'SORT_BY_ASC';\r\nexport const SORT_BY_DSC = 'SORT_BY_DSC';\r\nexport const SET_TEXT_FILTER = 'SET_TEXT_FILTER';\r\nexport const SET_ERROR = 'SET_ERROR';\r\nexport const SET_NO_ERROR = 'SET_NO_ERROR';","import axios from 'axios';\r\nimport {\r\n    SET_CURRENT_USER,\r\n    REMOVE_CURRENT_USER,\r\n} from './types';\r\nimport { setAuthToken } from './../utils/setAuthToken';\r\nimport { setError, setNoError } from './errorActions';\r\nimport { setLoadingFalse, setLoadingTrue } from './loadingActions';\r\n\r\nexport const loginUser = (userData = {}) => dispatch => {\r\n    axios.post('https://calm-peak-63612.herokuapp.com/users/login', userData)\r\n        .then((res) => {\r\n            dispatch(setNoError());\r\n            const token = res.headers['x-auth'];\r\n            localStorage.setItem('todoToken', token);\r\n            setAuthToken(token);\r\n            dispatch(setCurrentUser(res.data._id));\r\n        }).catch((e) => {\r\n            const message = e.message;\r\n            if (message === 'Request failed with status code 400') {\r\n                dispatch(setError('Email/Password Is Incorrect'));\r\n                setTimeout(() => {\r\n                    dispatch(setNoError());\r\n                }, 5000);\r\n            } else if (message === 'Network Error') {\r\n                alert('No Internet Connection');\r\n            }\r\n        });\r\n};\r\n\r\nexport const registerUser = (userData) => dispatch => {\r\n    axios.post('https://calm-peak-63612.herokuapp.com/users', userData)\r\n        .then((res) => {\r\n            const token = res.headers['x-auth'];\r\n            localStorage.setItem('todoToken', token);\r\n            setAuthToken(token);\r\n            dispatch(setCurrentUser(res.data._id));\r\n        })\r\n        .catch((e) => {\r\n            const message = e.message;\r\n            console.log(message);\r\n            if (message === 'Request failed with status code 400') {\r\n                dispatch(setError('User Is Already Registered With This Email'));\r\n                setTimeout(() => {\r\n                    dispatch(setNoError());\r\n                }, 5000);\r\n            } else if (message === 'Network Error') {\r\n                alert('No Internet Connection');\r\n            }\r\n        });\r\n};\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    dispatch(setLoadingTrue());\r\n    axios.delete('https://calm-peak-63612.herokuapp.com/users/me/token')\r\n        .then((res) => {\r\n            localStorage.removeItem('todoToken');\r\n            setAuthToken(false);\r\n            dispatch(removeCurrentUser());\r\n            dispatch(setLoadingFalse());\r\n        }).catch((e) => {\r\n            if (e.message === 'Network Error') {\r\n                alert('No Internet Connection');\r\n            }\r\n        });\r\n};\r\n\r\nexport const setCurrentUser = (uid) => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        uid\r\n    };\r\n};\r\n\r\nexport const removeCurrentUser = () => {\r\n    return {\r\n        type: REMOVE_CURRENT_USER\r\n    };\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from './../actions/authAction';\r\n\r\nconst Header = (props) => {\r\n    const publicLinks = (\r\n        <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    to=\"/login\"\r\n                    className=\"nav-link\"\r\n                >\r\n                    Login\r\n                </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    to=\"/signup\"\r\n                    className=\"nav-link\"\r\n                >\r\n                    Sign Up\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n    const privateLinks = (\r\n        <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    to=\"/\"\r\n                    className=\"nav-link\"\r\n                    onClick={() => {\r\n                        props.logoutUser();\r\n                    }}\r\n                >\r\n                    Logout\r\n            </Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n    return (\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark mb-5\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\">Todo</Link>\r\n                {\r\n                    props.isAuthenticated ? privateLinks : publicLinks\r\n                }\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: !!state.auth.uid\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logoutUser: () => dispatch(logoutUser())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import { SET_LOADING_FALSE, SET_LOADING_TRUE } from './types';\r\n\r\nexport const setLoadingTrue = () => {\r\n    return {\r\n        type: SET_LOADING_TRUE\r\n    };\r\n};\r\n\r\nexport const setLoadingFalse = () => {\r\n    return {\r\n        type: SET_LOADING_FALSE\r\n    };\r\n};","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport isEmail from 'validator/lib/isEmail';\r\n\r\nclass AuthForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.onFormSubmit = this.onFormSubmit.bind(this);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    handleEmailChange(e) {\r\n        const email = e.target.value;\r\n        this.setState(() => ({\r\n            email\r\n        }));\r\n    }\r\n\r\n    handlePasswordChange(e) {\r\n        const password = e.target.value;\r\n        this.setState(() => ({\r\n            password\r\n        }));\r\n    }\r\n\r\n    onFormSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        if (!this.state.email.trim()) {\r\n            this.setState(() => ({\r\n                errors: { email: 'Please Enter Email' }\r\n            }));\r\n            return;\r\n        } else if (!isEmail(this.state.email)) {\r\n            this.setState(() => ({\r\n                errors: {email: 'Please Enter Valid Email'}\r\n            }));\r\n            return;\r\n        }\r\n        if (!this.state.password.trim()) {\r\n            this.setState(() => ({\r\n                errors: { password: 'Please Enter Password' }\r\n            }));\r\n            return;\r\n        } else if (this.state.password.length < 6) {\r\n            this.setState(() => ({\r\n                errors: { password: 'Password Must Be Greater Then 6 Characters.'}\r\n            }));\r\n            return;\r\n        }\r\n\r\n        this.props.onSubmit({\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onFormSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Email\"\r\n                            className={classnames('form-control', {\r\n                                'is-invalid': this.state.errors.email\r\n                            })}\r\n                            value={this.state.email}\r\n                            onChange={this.handleEmailChange}\r\n                            onKeyUp={(e) => {\r\n                                const email = e.target.value;\r\n                                if (!isEmail(email)) {\r\n                                    this.setState(() => ({\r\n                                        errors: {email: 'Please Enter Valid Email'}\r\n                                    }));\r\n                                } else {\r\n                                    this.setState(() => ({\r\n                                        errors: {}\r\n                                    }));\r\n                                }\r\n                            }}\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            <small className=\"text-danger\">{this.state.errors.email}</small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Password\"\r\n                            className={classnames('form-control', {\r\n                                'is-invalid': this.state.errors.password\r\n                            })}\r\n                            value={this.state.password}\r\n                            onChange={this.handlePasswordChange}\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            <small className=\"text-danger\">{this.state.errors.password}</small>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Error = (props) => {\r\n    return (\r\n        <div className=\"alert alert-danger\">\r\n            {props.error.error_text}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.error\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Error);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AuthForm from './AuthForm';\r\nimport { loginUser } from './../actions/authAction';\r\nimport Error from './Error';\r\n\r\nconst Login = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            {props.hasErrors && <Error />}\r\n            <div className=\"card card-body\">\r\n                <h4 className=\"card-title\">Login</h4>\r\n                <AuthForm \r\n                    onSubmit={(userData) => {\r\n                        props.loginUser(userData);\r\n                    }}\r\n                />\r\n            </div> \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginUser: (userData) => dispatch(loginUser(userData))\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        hasErrors: !!state.error.error_text\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AuthForm from './AuthForm';\r\nimport { registerUser } from './../actions/authAction';\r\nimport Error from './Error';\r\n\r\nconst SignUp = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            {props.hasErrors && <Error />}\r\n            <div className=\"card card-body\">\r\n                <h4 className=\"card-title\">Sign Up</h4>\r\n                <AuthForm \r\n                    onSubmit={(userData) => {\r\n                        props.registerUser(userData);\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        registerUser: (userData) => dispatch(registerUser(userData))\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        hasErrors: !!state.error.error_text\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LandingPage = () => {\r\n    return (\r\n        <div className=\"container text-center d-flex flex-column justify-content-center landing\">\r\n            <h1>Welcome To Todo App</h1>\r\n            <p>Created By Abhishek Baghel</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <Link to=\"/login\" className=\"btn btn-primary mr-1\">Login</Link>\r\n                <Link to=\"/signup\" className=\"btn btn-danger ml-1\">Sign Up</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LandingPage;","import axios from 'axios';\r\n\r\nimport {\r\n    ADD_TODO,\r\n    REMOVE_TODO,\r\n    SET_TODOS\r\n} from './types';\r\n\r\nimport {\r\n    setLoadingFalse,\r\n    setLoadingTrue\r\n} from './loadingActions';\r\n\r\nexport const startSetTodos = () => dispatch => {\r\n    dispatch(setLoadingTrue());\r\n    axios.get('https://calm-peak-63612.herokuapp.com/todos')\r\n        .then((res) => {\r\n            dispatch(setTodos(res.data.todos));\r\n            dispatch(setLoadingFalse());\r\n        }).catch((e) => {\r\n            console.log('Error: ', e);\r\n        });\r\n};\r\n\r\nexport const startAddTodo = (text) => dispatch => {\r\n    dispatch(setLoadingTrue());\r\n    axios.post('https://calm-peak-63612.herokuapp.com/todos', {\r\n            text\r\n        })\r\n        .then((res) => {\r\n            dispatch(addTodo(res.data));\r\n            dispatch(setLoadingFalse());\r\n        }).catch((e) => {\r\n            console.log(e);\r\n        });\r\n};\r\n\r\nexport const startDeleteTodo = (_id) => dispatch => {\r\n    dispatch(setLoadingTrue());\r\n    axios.delete(`https://calm-peak-63612.herokuapp.com/todos/${_id}`, {\r\n            id: _id\r\n        })\r\n        .then((res) => {\r\n            dispatch(deleteTodo(res.data.todo._id));\r\n            dispatch(setLoadingFalse());\r\n        })\r\n        .catch((e) => {\r\n            console.log(e);\r\n        });\r\n};\r\n\r\nexport const deleteTodo = (_id) => {\r\n    return {\r\n        type: REMOVE_TODO,\r\n        _id\r\n    };\r\n};\r\n\r\nexport const addTodo = (todo) => {\r\n    return {\r\n        type: ADD_TODO,\r\n        todo\r\n    };\r\n};\r\n\r\nexport const setTodos = (todos = []) => {\r\n    return {\r\n        type: SET_TODOS,\r\n        todos\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { startDeleteTodo } from './../actions/todosActions';\r\n\r\nconst Todo = (props) => {\r\n    return (\r\n        <div className=\"card mb-1\">\r\n            <div className=\"card-body d-flex justify-content-between\">\r\n                <div>{props.todo.text}</div>\r\n                <i className=\"btn btn-danger\" onClick={() => {\r\n                    props.startDeleteTodo(props.todo._id);\r\n                }}>X</i>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        startDeleteTodo: (_id) => dispatch(startDeleteTodo(_id))\r\n    };\r\n};\r\n\r\nexport default connect(undefined, mapDispatchToProps)(Todo);","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nclass TodoForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleTextChange = this.handleTextChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.state = {\r\n            text: '',\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    handleTextChange(e) {\r\n        let text = e.target.value;\r\n        this.setState(() => ({\r\n            text\r\n        }));\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        if (!this.state.text.trim()) {\r\n            this.setState(() => ({\r\n                errors: {text: 'Please Enter Todo'}\r\n            }));\r\n            return;\r\n        }\r\n        this.setState(() => ({\r\n            text: ''\r\n        }));\r\n        this.props.onFormSubmit({\r\n            text: this.state.text\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Todo.....\"\r\n                            value={this.state.text}\r\n                            onChange={this.handleTextChange}\r\n                            className={classnames('form-control', {\r\n                                'is-invalid': this.state.errors.text\r\n                            })}\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            {this.state.errors.text}\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\">\r\n                        Add\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoForm;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TodoForm from './TodoForm';\r\nimport { startAddTodo } from './../actions/todosActions';\r\n\r\nconst AddTodo = (props) => {\r\n    return (\r\n        <div>\r\n            <TodoForm \r\n                onFormSubmit={(todo) => {\r\n                    props.startAddTodo(todo.text);\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        startAddTodo: (text) => dispatch(startAddTodo(text))\r\n    };\r\n};\r\n\r\nexport default connect(undefined, mapDispatchToProps)(AddTodo);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { setTextFilter, sortByASC, sortByDSC } from './../actions/filterAction';\r\n\r\nconst FilterSort = (props) => {\r\n    return (\r\n        <div className=\"d-flex justify-content-between\">\r\n            <div className=\"form-group w-75\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search Todo....\"\r\n                    onChange={(e) => {\r\n                        let text = e.target.value;\r\n                        props.setTextFilter(text.trim());\r\n                    }}\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <select className=\"form-control\" onChange={(e) => {\r\n                    if (e.target.value === 'asc') {\r\n                        props.sortByASC();\r\n                    } else if (e.target.value === 'dsc') {\r\n                        props.sortByDSC();\r\n                    }\r\n                }}>\r\n                    <option value=\"asc\">A-Z</option>\r\n                    <option value=\"dsc\">Z-A</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setTextFilter: (text) => dispatch(setTextFilter(text)),\r\n        sortByASC: () => dispatch(sortByASC()),\r\n        sortByDSC: () => dispatch(sortByDSC())\r\n    };\r\n};\r\n\r\nexport default connect(undefined, mapDispatchToProps)(FilterSort);","import {\r\n    SET_TEXT_FILTER,\r\n    SORT_BY_ASC,\r\n    SORT_BY_DSC\r\n} from './types';\r\n\r\nexport const setTextFilter = (text) => {\r\n    return {\r\n        type: SET_TEXT_FILTER,\r\n        text\r\n    };\r\n};\r\n\r\nexport const sortByASC = () => {\r\n    return {\r\n        type: SORT_BY_ASC\r\n    };\r\n};\r\n\r\nexport const sortByDSC = () => {\r\n    return {\r\n        type: SORT_BY_DSC\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { startSetTodos } from './../actions/todosActions';\r\nimport preLoader from './../gifs/preloader.gif';\r\nimport Todo from './Todo';\r\nimport AddTodo from './AddTodo';\r\nimport FilterSort from './FilterSort';\r\nimport { getSelectedTodos } from './../selectors/getSelectedTodos';\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.loadingJSX = (\r\n            <div className=\"preloader\">\r\n                <img src={preLoader} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.startSetTodos();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.isLoading ? this.loadingJSX : <div className=\"container mx-auto w-75\">\r\n            <div className=\"card card-body mb-3\">\r\n                <FilterSort />\r\n            </div>\r\n            <div className=\"card  mb-1\">\r\n                <div className=\"card-header\">Todos</div>\r\n                <div className=\"card-body\">\r\n                    {this.props.todos.length > 0 ?\r\n                        this.props.todos.map((todo) => {\r\n                            return <Todo\r\n                                todo={todo}\r\n                                key={todo._id}\r\n                            />;\r\n                        })\r\n                        : <h1>No Todos Found</h1>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"card card-body mb-5\">\r\n                <AddTodo />\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: getSelectedTodos(state.todos, state.filters),\r\n        isLoading: state.isLoading\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        startSetTodos: () => dispatch(startSetTodos())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","export const getSelectedTodos = (todos, filters) => {\r\n    return todos.filter((todo) => {\r\n        return todo.text.toLowerCase().includes(filters.text.toLowerCase());\r\n    }).sort((a, b) => {\r\n        if (filters.sortBy === 'asc') {\r\n            return a.text.toLowerCase().localeCompare(b.text.toLowerCase());\r\n        } else if (filters.sortBy === 'dsc') {\r\n            return b.text.toLowerCase().localeCompare(a.text.toLowerCase());\r\n        }\r\n    });\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={(props) => {\r\n                return (\r\n                    isAuthenticated ? (\r\n                        <div>\r\n                            <Component {...props}/>\r\n                        </div>\r\n                    ) : (\r\n                        <Redirect to=\"/\" />\r\n                    )\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: !!state.auth.uid\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={(props) => {\r\n                return (\r\n                    isAuthenticated ? (\r\n                        <Redirect to=\"/dashboard\" />\r\n                    ) : (\r\n                        <Component {...props} />\r\n                    )\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: !!state.auth.uid\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            <div className=\"card card-body\">\r\n                <h2>404 | Not Found <Link to=\"/\" >Go Home</Link></h2>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Header from './../components/Header';\r\nimport Login from './../components/Login';\r\nimport SignUp from './../components/SignUp';\r\nimport LandingPage from './../components/LandingPage';\r\nimport Dashboard from './../components/Dashboard';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\nimport NotFound from './../components/NotFound';\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <BrowserRouter\r\n            basename={process.env.PUBLIC_URL}\r\n        >\r\n            <div>\r\n                <Header />\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact path=\"/\"\r\n                        component={LandingPage}\r\n                    />\r\n                    <PrivateRoute \r\n                        exact path=\"/dashboard\"\r\n                        component={Dashboard}\r\n                    />\r\n                    <PublicRoute \r\n                        exact path=\"/login\"\r\n                        component={Login}\r\n                    />\r\n                    <PublicRoute \r\n                        exact path=\"/signup\"\r\n                        component={SignUp}\r\n                    />\r\n                    <Route \r\n                        component={NotFound}\r\n                    />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { Component } from 'react';\nimport './App.css';\nimport AppRouter from './router/AppRouter';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <AppRouter />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { REMOVE_CURRENT_USER, SET_CURRENT_USER } from './../actions/types';\r\n\r\nconst authReducerDefaultState = {};\r\n\r\nconst authReducer = (state = authReducerDefaultState, action) => {\r\n    switch(action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                uid: action.uid\r\n            };\r\n        case REMOVE_CURRENT_USER:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","import { ADD_TODO, REMOVE_TODO, SET_TODOS } from './../actions/types';\r\n\r\nconst todosReducerDefaultState = [];\r\n\r\nconst todosReducer = (state = todosReducerDefaultState, action) => {\r\n    switch(action.type) {\r\n        case SET_TODOS:\r\n            return action.todos;\r\n        case ADD_TODO: \r\n            return [\r\n                ...state,\r\n                action.todo\r\n            ];\r\n        case REMOVE_TODO:\r\n            return state.filter((todo) => {\r\n                return todo._id !== action._id\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default todosReducer;","import { SET_LOADING_FALSE, SET_LOADING_TRUE } from './../actions/types';\r\n\r\nconst loadingReducerDefaultState = null;\r\n\r\nconst loadingReducer = (state = loadingReducerDefaultState, action) => {\r\n    switch(action.type) {\r\n        case SET_LOADING_TRUE:\r\n            return true;\r\n        case SET_LOADING_FALSE:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default loadingReducer;","import {\r\n    SET_TEXT_FILTER,\r\n    SORT_BY_ASC,\r\n    SORT_BY_DSC\r\n} from './../actions/types';\r\n\r\nconst filterReducerDefaultState = {\r\n    text: '',\r\n    sortBy: 'asc'\r\n};\r\n\r\nconst filterReducer = (state = filterReducerDefaultState, action) => {\r\n    switch(action.type) {\r\n        case SET_TEXT_FILTER:\r\n            return {\r\n                ...state,\r\n                text: action.text\r\n            };\r\n        case SORT_BY_ASC: \r\n            return {\r\n                ...state,\r\n                sortBy: 'asc'\r\n            };\r\n        case SORT_BY_DSC:\r\n            return {\r\n                ...state,\r\n                sortBy: 'dsc'\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default filterReducer;","import { SET_ERROR, SET_NO_ERROR } from './../actions/types';\r\n\r\nconst errorReducerDefaultState = {};\r\n\r\nconst errorReducer = (state = errorReducerDefaultState, action) => {\r\n    switch(action.type) {\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error_text: action.error_text\r\n            };\r\n        case SET_NO_ERROR:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default errorReducer;","import { combineReducers, applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from './../reducers/authReducer';\r\nimport todosReducer from './../reducers/todosReducer';\r\nimport loadingReducer from './../reducers/loadingReducer';\r\nimport filterReducer from './../reducers/filterReducer';\r\nimport errorReducer from './../reducers/errorReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst configureStore = () => {\r\n    const store = createStore(combineReducers({\r\n        auth: authReducer,\r\n        todos: todosReducer,\r\n        isLoading: loadingReducer,\r\n        filters: filterReducer,\r\n        error: errorReducer\r\n    }), composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    ));\r\n\r\n\r\n    return store;\r\n};\r\n\r\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport configureStore from './store/configureStore';\nimport { Provider } from 'react-redux';\nimport { setAuthToken } from './utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { setCurrentUser, removeCurrentUser } from './actions/authAction';\n\nconst store = configureStore();\n\nlet jsx = (\n    <Provider\n        store={store}\n    >\n        <App />\n    </Provider>\n);\n\nconst renderApp = () => {\n    return ReactDOM.render(jsx, document.getElementById('root'));\n}\n\nif (localStorage.getItem('todoToken')) {\n    setAuthToken(localStorage.getItem('todoToken'));\n    const decoded = jwt_decode(localStorage.getItem('todoToken'));\n    console.log(decoded);\n    store.dispatch(setCurrentUser(decoded._id));\n    renderApp();\n} else {\n    store.dispatch(removeCurrentUser());\n    renderApp();\n}\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}